@model RegisterLoginMVC.Models.Users

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

<h4>Users</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-3">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            @*  <div class="form-group">
                <label asp-for="ConfirmPass" class="control-label"></label>
                <input asp-for="ConfirmPass" class="form-control" />
                <span asp-validation-for="ConfirmPass" class="text-danger"></span>
            </div> *@
            <div class="form-group mb-3">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
        </form>
        <div class="form-group mb-3">
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                @ViewBag.Message
            }
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
